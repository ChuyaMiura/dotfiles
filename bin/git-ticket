#!/usr/bin/ruby
# -*- coding: utf-8 -*-

=begin rdoc
Install
----------

Move into a directory in PATH environment variable.

   $ mv git-ticket /path/to/some/dir
   $ chmod a+x /path/to/some/dir/git-ticket

If you use old ruby(e.g. Ruby 1.8), you should install json library.

   $ gem install json
   $ export RUBYOPT=rubygems

Setup
-----------

Set your redmine root and API Key.

   git config redmine.url http://example.com/redmine
   git config redmine.apikey some_api_key

Usage
-----------

And create topic branch.

   git ticket 42

At topic branch, you could see ticket summary.

   git ticket

This subcommand use bleis-style branch name. Please see also https://github.com/bleis-tift/Git-Hooks/ .
=end

require 'rubygems'
require 'uri'
require 'open-uri'
require 'json'
require 'optparse'

Root = %x(git config redmine.url).strip
ApiKey = %x(git config redmine.apikey).strip

if Root.empty? or ApiKey.empty? then
  puts <<-END
please set redmine url & redmine api key

  git config redmine.url http://example.com/redmine
  git config redmine.apikey some_api_key
END
  exit 0
end


def fetch_json(url)
  open(url) do |io|
    JSON.parse(io.read)
  end
end

# ------------------------------
# main
# ------------------------------
ProgramConfig = {}
opts = OptionParser.new
opts.banner = 'git ticket [options] [id]'
opts.on("-f", "--force","force create branch"){
  ProgramConfig[:force] = true
}
opts.parse!(ARGV)

unless ARGV.empty?
  ticket, _ = *ARGV
  if ProgramConfig[:force]
    system "git branch -D id/#{ticket}"
  end
  system "git checkout -b id/#{ticket}"
end

branch = %x(git branch -l | grep "*" | cut -d " " -f 2).strip
if branch =~ %r!id/(\d+)!
  ticket = $1
  base = URI.join(Root, "/issues/#{ticket}")
  url = "#{base}.json?key=#{ApiKey}"
  json = fetch_json(url)
  issue = json['issue'] || json
  raise "no such issue #{ticket} : #{base}" unless issue

#     puts <<-END
# Author:\t#{issue['author']['name']}
# Date:\t#{issue['updated_on']}

    puts <<-END
#{issue['subject']}
Date:\t#{issue['updated_on']}

#{issue['description']}
    END
end
